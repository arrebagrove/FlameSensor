// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace FlameSensor.RaspberryPi.Models
{
    public partial class SensorReading
    {
        private string _deviceId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string DeviceId
        {
            get { return this._deviceId; }
            set { this._deviceId = value; }
        }
        
        private string _sensorName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string SensorName
        {
            get { return this._sensorName; }
            set { this._sensorName = value; }
        }
        
        private double? _value;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? Value
        {
            get { return this._value; }
            set { this._value = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the SensorReading class.
        /// </summary>
        public SensorReading()
        {
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type SensorReading
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.DeviceId != null)
            {
                outputObject["DeviceId"] = this.DeviceId;
            }
            if (this.SensorName != null)
            {
                outputObject["SensorName"] = this.SensorName;
            }
            if (this.Value != null)
            {
                outputObject["Value"] = this.Value.Value;
            }
            return outputObject;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken deviceIdValue = inputObject["DeviceId"];
                if (deviceIdValue != null && deviceIdValue.Type != JTokenType.Null)
                {
                    this.DeviceId = ((string)deviceIdValue);
                }
                JToken sensorNameValue = inputObject["SensorName"];
                if (sensorNameValue != null && sensorNameValue.Type != JTokenType.Null)
                {
                    this.SensorName = ((string)sensorNameValue);
                }
                JToken valueValue = inputObject["Value"];
                if (valueValue != null && valueValue.Type != JTokenType.Null)
                {
                    this.Value = ((double)valueValue);
                }
            }
        }
    }
}
